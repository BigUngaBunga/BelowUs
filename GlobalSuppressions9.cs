// This file is used by Code Analysis to maintain SuppressMessage
// attributes that are applied to this project.
// Project-level suppressions either have no target or are given
// a specific target and scoped to a namespace, type, member, etc.

using System.Diagnostics.CodeAnalysis;

[assembly: SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "<Pending>", Scope = "member", Target = "~F:Mirror.Weaver.CompilationFinishedHook.MirrorRuntimeAssemblyName")]
[assembly: SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "<Pending>", Scope = "member", Target = "~F:Mirror.Weaver.CompilationFinishedHook.MirrorWeaverAssemblyName")]
[assembly: SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "<Pending>", Scope = "member", Target = "~F:Mirror.Weaver.MethodProcessor.RpcPrefix")]
[assembly: SuppressMessage("Major Code Smell", "S2933:Fields that are only assigned in the constructor should be \"readonly\"", Justification = "<Pending>", Scope = "member", Target = "~F:Mirror.Weaver.NetworkBehaviourProcessor.syncVarNetIds")]
[assembly: SuppressMessage("Major Code Smell", "S2933:Fields that are only assigned in the constructor should be \"readonly\"", Justification = "<Pending>", Scope = "member", Target = "~F:Mirror.Weaver.NetworkBehaviourProcessor.syncVars")]
[assembly: SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "<Pending>", Scope = "member", Target = "~F:Mirror.Weaver.SyncVarProcessor.SyncVarLimit")]
[assembly: SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "<Pending>", Scope = "member", Target = "~F:Mirror.Weaver.Weaver.DebugLogEnabled")]
[assembly: SuppressMessage("Major Code Smell", "S125:Sections of code should not be commented out", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.CommandProcessor.ProcessCommandCall(Mono.CecilX.TypeDefinition,Mono.CecilX.MethodDefinition,Mono.CecilX.CustomAttribute)~Mono.CecilX.MethodDefinition")]
[assembly: SuppressMessage("Major Code Smell", "S125:Sections of code should not be commented out", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.CommandProcessor.ProcessCommandInvoke(Mono.CecilX.TypeDefinition,Mono.CecilX.MethodDefinition,Mono.CecilX.MethodDefinition)~Mono.CecilX.MethodDefinition")]
[assembly: SuppressMessage("Style", "IDE0022:Use expression body for methods", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.CompilationFinishedHook.CompilerMessagesContainError(UnityEditor.Compilation.CompilerMessage[])~System.Boolean")]
[assembly: SuppressMessage("Style", "IDE0022:Use expression body for methods", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.Extensions.FindAllPublicFields(Mono.CecilX.TypeReference)~System.Collections.Generic.IEnumerable{Mono.CecilX.FieldDefinition}")]
[assembly: SuppressMessage("Style", "IDE0022:Use expression body for methods", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.Extensions.GetCustomAttribute``1(Mono.CecilX.ICustomAttributeProvider)~Mono.CecilX.CustomAttribute")]
[assembly: SuppressMessage("Style", "IDE0011:Add braces", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.Extensions.GetField``1(Mono.CecilX.CustomAttribute,System.String,``0)~``0")]
[assembly: SuppressMessage("Style", "IDE0022:Use expression body for methods", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.Extensions.GetMethod(Mono.CecilX.TypeDefinition,System.String)~Mono.CecilX.MethodDefinition")]
[assembly: SuppressMessage("Style", "IDE0022:Use expression body for methods", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.Extensions.GetMethods(Mono.CecilX.TypeDefinition,System.String)~System.Collections.Generic.List{Mono.CecilX.MethodDefinition}")]
[assembly: SuppressMessage("Style", "IDE0022:Use expression body for methods", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.Extensions.HasCustomAttribute``1(Mono.CecilX.ICustomAttributeProvider)~System.Boolean")]
[assembly: SuppressMessage("Major Code Smell", "S125:Sections of code should not be commented out", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.Extensions.ImplementsInterface``1(Mono.CecilX.TypeDefinition)~System.Boolean")]
[assembly: SuppressMessage("Style", "IDE0046:Convert to conditional expression", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.Extensions.Is(Mono.CecilX.TypeReference,System.Type)~System.Boolean")]
[assembly: SuppressMessage("Style", "IDE0046:Convert to conditional expression", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.Extensions.IsDerivedFrom(Mono.CecilX.TypeReference,System.Type)~System.Boolean")]
[assembly: SuppressMessage("Style", "IDE0022:Use expression body for methods", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.Extensions.IsMultidimensionalArray(Mono.CecilX.TypeReference)~System.Boolean")]
[assembly: SuppressMessage("Major Code Smell", "S125:Sections of code should not be commented out", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.MethodProcessor.SubstituteMethod(Mono.CecilX.TypeDefinition,Mono.CecilX.MethodDefinition)~Mono.CecilX.MethodDefinition")]
[assembly: SuppressMessage("Major Code Smell", "S125:Sections of code should not be commented out", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.NetworkBehaviourProcessor.DeserializeNetworkBehaviourField(Mono.CecilX.FieldDefinition,Mono.CecilX.Cil.ILProcessor,Mono.CecilX.MethodDefinition,Mono.CecilX.MethodDefinition)")]
[assembly: SuppressMessage("Major Code Smell", "S125:Sections of code should not be commented out", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.NetworkBehaviourProcessor.DeserializeNetworkIdentityField(Mono.CecilX.FieldDefinition,Mono.CecilX.Cil.ILProcessor,Mono.CecilX.MethodDefinition,Mono.CecilX.MethodDefinition)")]
[assembly: SuppressMessage("Major Code Smell", "S125:Sections of code should not be commented out", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.NetworkBehaviourProcessor.DeserializeNormalField(Mono.CecilX.FieldDefinition,Mono.CecilX.Cil.ILProcessor,Mono.CecilX.MethodDefinition,Mono.CecilX.MethodDefinition)")]
[assembly: SuppressMessage("Info Code Smell", "S1135:Track uses of \"TODO\" tags", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.NetworkBehaviourProcessor.GenerateConstants")]
[assembly: SuppressMessage("Major Code Smell", "S125:Sections of code should not be commented out", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.NetworkBehaviourProcessor.GenerateDeSerialization")]
[assembly: SuppressMessage("Major Code Smell", "S125:Sections of code should not be commented out", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.NetworkBehaviourProcessor.GenerateRegisterRemoteDelegate(Mono.CecilX.Cil.ILProcessor,Mono.CecilX.MethodReference,Mono.CecilX.MethodDefinition,System.String)")]
[assembly: SuppressMessage("Major Code Smell", "S125:Sections of code should not be commented out", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.NetworkBehaviourProcessor.GenerateSerialization")]
[assembly: SuppressMessage("Major Code Smell", "S125:Sections of code should not be commented out", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.NetworkBehaviourProcessor.ReadArguments(Mono.CecilX.MethodDefinition,Mono.CecilX.Cil.ILProcessor,Mirror.Weaver.RemoteCallType)~System.Boolean")]
[assembly: SuppressMessage("Style", "IDE0022:Use expression body for methods", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.NetworkBehaviourProcessor.WasProcessed(Mono.CecilX.TypeDefinition)~System.Boolean")]
[assembly: SuppressMessage("Major Code Smell", "S125:Sections of code should not be commented out", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.NetworkBehaviourProcessor.WriteArguments(Mono.CecilX.Cil.ILProcessor,Mono.CecilX.MethodDefinition,Mirror.Weaver.RemoteCallType)~System.Boolean")]
[assembly: SuppressMessage("Major Code Smell", "S125:Sections of code should not be commented out", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.NetworkBehaviourProcessor.WriteClientActiveCheck(Mono.CecilX.Cil.ILProcessor,System.String,Mono.CecilX.Cil.Instruction,System.String)")]
[assembly: SuppressMessage("Major Code Smell", "S125:Sections of code should not be commented out", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.NetworkBehaviourProcessor.WriteRecycleWriter(Mono.CecilX.Cil.ILProcessor)")]
[assembly: SuppressMessage("Major Code Smell", "S125:Sections of code should not be commented out", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.NetworkBehaviourProcessor.WriteServerActiveCheck(Mono.CecilX.Cil.ILProcessor,System.String,Mono.CecilX.Cil.Instruction,System.String)")]
[assembly: SuppressMessage("Major Code Smell", "S125:Sections of code should not be commented out", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.PropertySiteProcessor.ProcessInstructionGetterField(Mono.CecilX.MethodDefinition,Mono.CecilX.Cil.Instruction,Mono.CecilX.FieldDefinition)")]
[assembly: SuppressMessage("Major Code Smell", "S125:Sections of code should not be commented out", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.PropertySiteProcessor.ProcessInstructionLoadAddress(Mono.CecilX.MethodDefinition,Mono.CecilX.Cil.Instruction,Mono.CecilX.FieldDefinition,System.Int32)~System.Int32")]
[assembly: SuppressMessage("Major Code Smell", "S125:Sections of code should not be commented out", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.PropertySiteProcessor.ProcessInstructionSetterField(Mono.CecilX.MethodDefinition,Mono.CecilX.Cil.Instruction,Mono.CecilX.FieldDefinition)")]
[assembly: SuppressMessage("Major Code Smell", "S125:Sections of code should not be commented out", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.PropertySiteProcessor.ProcessSiteClass(Mono.CecilX.TypeDefinition)")]
[assembly: SuppressMessage("Style", "IDE0011:Add braces", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.PropertySiteProcessor.ProcessSiteMethod(Mono.CecilX.MethodDefinition)")]
[assembly: SuppressMessage("Major Code Smell", "S125:Sections of code should not be commented out", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.PropertySiteProcessor.ProcessSiteMethod(Mono.CecilX.MethodDefinition)")]
[assembly: SuppressMessage("Major Code Smell", "S125:Sections of code should not be commented out", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.Readers.GenerateArraySegmentReadFunc(Mono.CecilX.TypeReference)~Mono.CecilX.MethodDefinition")]
[assembly: SuppressMessage("Major Code Smell", "S125:Sections of code should not be commented out", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.Readers.GenerateNullCheck(Mono.CecilX.Cil.ILProcessor)")]
[assembly: SuppressMessage("Major Code Smell", "S125:Sections of code should not be commented out", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.Readers.GenerateReadCollection(Mono.CecilX.TypeReference,Mono.CecilX.TypeReference,System.String)~Mono.CecilX.MethodDefinition")]
[assembly: SuppressMessage("Style", "IDE0022:Use expression body for methods", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.Readers.Init")]
[assembly: SuppressMessage("Style", "IDE0063:Use simple 'using' statement", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.ReaderWriterProcessor.Process(Mono.CecilX.AssemblyDefinition)~System.Boolean")]
[assembly: SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.ReaderWriterProcessor.Process(Mono.CecilX.AssemblyDefinition)~System.Boolean")]
[assembly: SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.ReaderWriterProcessor.ProcessAssemblyClasses(Mono.CecilX.AssemblyDefinition,Mono.CecilX.AssemblyDefinition)~System.Boolean")]
[assembly: SuppressMessage("Major Code Smell", "S125:Sections of code should not be commented out", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.RpcProcessor.ProcessRpcCall(Mono.CecilX.TypeDefinition,Mono.CecilX.MethodDefinition,Mono.CecilX.CustomAttribute)~Mono.CecilX.MethodDefinition")]
[assembly: SuppressMessage("Style", "IDE0011:Add braces", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.ServerClientAttributeProcessor.ProcessSiteMethod(Mono.CecilX.MethodDefinition)~System.Boolean")]
[assembly: SuppressMessage("Style", "IDE0046:Convert to conditional expression", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.ServerClientAttributeProcessor.ProcessSiteMethod(Mono.CecilX.MethodDefinition)~System.Boolean")]
[assembly: SuppressMessage("Style", "IDE0022:Use expression body for methods", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.SyncObjectInitializer.GenerateSyncObjectInitializer(Mono.CecilX.Cil.ILProcessor,Mono.CecilX.FieldDefinition)")]
[assembly: SuppressMessage("Major Code Smell", "S125:Sections of code should not be commented out", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.SyncObjectInitializer.GenerateSyncObjectRegistration(Mono.CecilX.Cil.ILProcessor,Mono.CecilX.FieldDefinition)")]
[assembly: SuppressMessage("Style", "IDE0046:Convert to conditional expression", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.SyncObjectInitializer.ImplementsSyncObject(Mono.CecilX.TypeReference)~System.Boolean")]
[assembly: SuppressMessage("Major Code Smell", "S125:Sections of code should not be commented out", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.SyncVarProcessor.GenerateSyncVarGetter(Mono.CecilX.FieldDefinition,System.String,Mono.CecilX.FieldDefinition)~Mono.CecilX.MethodDefinition")]
[assembly: SuppressMessage("Major Code Smell", "S125:Sections of code should not be commented out", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.SyncVarProcessor.GenerateSyncVarSetter(Mono.CecilX.TypeDefinition,Mono.CecilX.FieldDefinition,System.String,System.Int64,Mono.CecilX.FieldDefinition)~Mono.CecilX.MethodDefinition")]
[assembly: SuppressMessage("Info Code Smell", "S1135:Track uses of \"TODO\" tags", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.SyncVarProcessor.GenerateSyncVarSetter(Mono.CecilX.TypeDefinition,Mono.CecilX.FieldDefinition,System.String,System.Int64,Mono.CecilX.FieldDefinition)~Mono.CecilX.MethodDefinition")]
[assembly: SuppressMessage("Style", "IDE0046:Convert to conditional expression", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.SyncVarProcessor.GetHookMethod(Mono.CecilX.TypeDefinition,Mono.CecilX.FieldDefinition)~Mono.CecilX.MethodDefinition")]
[assembly: SuppressMessage("Style", "IDE1006:Naming Styles", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.SyncVarProcessor.HookParameterMessage(System.String,Mono.CecilX.TypeReference)~System.String")]
[assembly: SuppressMessage("Minor Code Smell", "S3626:Jump statements should not be redundant", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.SyncVarProcessor.ProcessSyncVars(Mono.CecilX.TypeDefinition)~System.ValueTuple{System.Collections.Generic.List{Mono.CecilX.FieldDefinition},System.Collections.Generic.Dictionary{Mono.CecilX.FieldDefinition,Mono.CecilX.FieldDefinition}}")]
[assembly: SuppressMessage("Style", "IDE0061:Use expression body for local functions", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.SyncVarProcessor.WriteCallHookMethod(Mono.CecilX.Cil.ILProcessor,Mono.CecilX.MethodDefinition,Mono.CecilX.Cil.VariableDefinition,Mono.CecilX.FieldDefinition)")]
[assembly: SuppressMessage("Style", "IDE0022:Use expression body for methods", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.SyncVarProcessor.WriteCallHookMethodUsingArgument(Mono.CecilX.Cil.ILProcessor,Mono.CecilX.MethodDefinition,Mono.CecilX.Cil.VariableDefinition)")]
[assembly: SuppressMessage("Major Code Smell", "S125:Sections of code should not be commented out", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.TargetRpcProcessor.ProcessTargetRpcCall(Mono.CecilX.TypeDefinition,Mono.CecilX.MethodDefinition,Mono.CecilX.CustomAttribute)~Mono.CecilX.MethodDefinition")]
[assembly: SuppressMessage("Style", "IDE0022:Use expression body for methods", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.TypeReferenceComparer.Equals(Mono.CecilX.TypeReference,Mono.CecilX.TypeReference)~System.Boolean")]
[assembly: SuppressMessage("Style", "IDE0022:Use expression body for methods", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.TypeReferenceComparer.GetHashCode(Mono.CecilX.TypeReference)~System.Int32")]
[assembly: SuppressMessage("Style", "IDE0022:Use expression body for methods", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.Weaver.Warning(System.String,Mono.CecilX.MemberReference)")]
[assembly: SuppressMessage("Major Code Smell", "S125:Sections of code should not be commented out", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.Weaver.WeaveNetworkBehavior(Mono.CecilX.TypeDefinition)~System.Boolean")]
[assembly: SuppressMessage("Style", "IDE0021:Use expression body for constructors", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.WeaverException.#ctor(System.String,Mono.CecilX.MemberReference)")]
[assembly: SuppressMessage("Style", "IDE0022:Use expression body for methods", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.WeaverLists.SetNumSyncVars(System.String,System.Int32)")]
[assembly: SuppressMessage("Minor Code Smell", "S1481:Unused local variables should be removed", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.WeaverTypes.SetupTargetTypes(Mono.CecilX.AssemblyDefinition)")]
[assembly: SuppressMessage("Minor Code Smell", "S1481:Unused local variables should be removed", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.Writers.GenerateCollectionWriter(Mono.CecilX.TypeReference,Mono.CecilX.TypeReference,System.String)~Mono.CecilX.MethodDefinition")]
[assembly: SuppressMessage("Style", "IDE0059:Unnecessary assignment of a value", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.Writers.GenerateCollectionWriter(Mono.CecilX.TypeReference,Mono.CecilX.TypeReference,System.String)~Mono.CecilX.MethodDefinition")]
[assembly: SuppressMessage("Major Code Smell", "S125:Sections of code should not be commented out", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.Writers.GenerateCollectionWriter(Mono.CecilX.TypeReference,Mono.CecilX.TypeReference,System.String)~Mono.CecilX.MethodDefinition")]
[assembly: SuppressMessage("Style", "IDE0022:Use expression body for methods", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.Writers.Init")]
[assembly: SuppressMessage("Major Code Smell", "S125:Sections of code should not be commented out", Justification = "<Pending>", Scope = "member", Target = "~M:Mirror.Weaver.Writers.WriteNullCheck(Mono.CecilX.Cil.ILProcessor)")]
